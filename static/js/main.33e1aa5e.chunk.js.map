{"version":3,"sources":["components/EnhancedTable.tsx","components/Map.tsx","services/api.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onRequestSort","TableHead","TableRow","headCell","TableCell","align","padding","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","createStyles","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","variant","component","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","React","useState","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","rows","length","Paper","TableContainer","Table","aria-labelledby","size","aria-label","rowCount","TableBody","slice","row","labelId","hover","remote_host","console","log","tabIndex","scope","count","last_seen","style","colSpan","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","Map","MapContainer","center","scrollWheelZoom","zoom","TileLayer","attribution","url","Marker","Popup","getBadHosts","get","data","host","endpoint","process","headers","Headers","fetch","method","redirect","response","status","json","Error","App","hosts","setHosts","loading","setLoading","error","setError","useEffect","then","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33e1aa5e.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { createStyles, lighten, makeStyles, Theme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { BadHost } from \"../services/api\";\n\ntype Data = BadHost;\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n  disablePadding: boolean;\n  id: keyof Data;\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n  { id: 'remote_host', numeric: false, disablePadding: true, label: 'Remote Host (IP Address)' },\n  { id: 'count', numeric: true, disablePadding: false, label: 'Count' },\n  { id: 'last_seen', numeric: true, disablePadding: false, label: 'Last Seen' }\n];\n\ninterface EnhancedTableProps {\n  classes: ReturnType<typeof useStyles>;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useToolbarStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1),\n    },\n    highlight:\n      theme.palette.type === 'light'\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n          }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n          },\n    title: {\n      flex: '1 1 100%',\n    },\n  }),\n);\n\nconst EnhancedTableToolbar = () => {\n  const classes = useToolbarStyles();\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {})}\n    >\n      <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n        Bad Hosts\n      </Typography>\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n  }),\n);\n\ninterface TableProps {\n  rows: Data[]\n}\n\nexport default function EnhancedTable(props: TableProps) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Data>('count');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Data) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    console.log('click');\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size=\"medium\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={props.rows.length}\n            />\n            <TableBody>\n              {stableSort(props.rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.remote_host)}\n                      tabIndex={-1}\n                      key={row.remote_host}\n                    >\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.remote_host}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.count}</TableCell>\n                      <TableCell align=\"right\">{row.last_seen}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={props.rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import React from 'react';\nimport { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet';\n\nconst Map = () => {\n  return (\n    <div>\n      <MapContainer\n        center={[51.505, -0.09]}\n        scrollWheelZoom={false}\n        style={{ width: '500px', height: '500px' }}\n        zoom={13}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={[51.505, -0.09]}>\n          <Popup>\n            A pretty CSS3 popup. <br /> Easily customizable.\n          </Popup>\n        </Marker>\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default Map;\n","export interface BadHost {\n  count: number;\n  last_seen: string;\n  remote_host: string;\n}\n\nexport const getBadHosts = async (): Promise<BadHost[]> => {\n  const data = await get(\"/bad-hosts\") as BadHost[];\n  return data.map((host) => ({\n    ...host,\n    count: parseInt(`${host.count}`, 10)\n  }));\n};\n\nexport interface Geolocation {\n  city: string;\n  country_iso: string;\n  country_name: string;\n  latitude: number;\n  longitude: number;\n  postal_code: string;\n  region_iso: string;\n  region_name: string;\n}\n\nexport const getGeo = async (ip: string): Promise<Geolocation> => {\n  return get(`/netinfo/geolocation/${ip}`) as Promise<Geolocation>;\n};\n\nexport type ApiResponse = BadHost[] | Geolocation;\n\nconst get = async (endpoint: string): Promise<ApiResponse> => {\n  const url = `${process.env.REACT_APP_API_URL}${endpoint}`;\n  const headers = new Headers({\n    \"Authorization\": `Bearer ${process.env.REACT_APP_API_SECRET}`,\n    \"Content-Type\": \"application/json\",\n  })\n  const response = await fetch(url, {\n    headers,\n    method: \"GET\",\n    redirect: 'follow'\n  });\n\n  if (response.status === 200) {\n    let json = await response.json();\n    return json.data;\n  } else {\n    throw new Error(\"Problem with API request\");\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport BadHostTable from './components/EnhancedTable';\nimport Map from './components/Map';\nimport { BadHost, getBadHosts } from './services/api';\n\nconst App = () => {\n  const [hosts, setHosts] = useState<BadHost[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    getBadHosts()\n      .then((hosts) => {\n        setHosts(hosts);\n        setLoading(false);\n      })\n      .catch(() => {\n        setError(true);\n      });\n  }, []);\n\n  if (error) {\n    return <div>Error Loading Bad Hosts</div>\n  }\n\n  if (loading) {\n    return <div>Loading Bad Hosts</div>\n  }\n\n  return (\n    <>\n      <Map />\n      <BadHostTable rows={hosts} />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}